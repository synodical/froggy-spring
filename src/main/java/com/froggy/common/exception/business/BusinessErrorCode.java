package com.froggy.common.exception.business;

import com.froggy.common.exception.ErrorCode;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import org.springframework.http.HttpStatus;

@Getter
@RequiredArgsConstructor
public enum BusinessErrorCode implements ErrorCode {
    SUPERSTORE_API_FAILED(HttpStatus.INTERNAL_SERVER_ERROR),
    INTERNAL_SERVER_ERROR(HttpStatus.INTERNAL_SERVER_ERROR),
    DUPLICATE_PERSONA_ID(HttpStatus.BAD_REQUEST),

    NOT_FOUND_OWNER_SHOP(HttpStatus.NOT_FOUND),
    NOT_FOUND_SHOP(HttpStatus.NOT_FOUND),
    NOT_FOUND_SHOP_DOMAIN(HttpStatus.NOT_FOUND),
    NOT_FOUND_CONTRACT(HttpStatus.NOT_FOUND),
    NOT_FOUND_SHOP_CONTRACT_AGREEMENT(HttpStatus.NOT_FOUND),
    NOT_FOUND_USER_CONTRACT_AGREEMENT(HttpStatus.NOT_FOUND),
    NOT_FOUND_PICKUP_ORDER(HttpStatus.NOT_FOUND),
    NOT_FOUND_RESERVATION_ORDER(HttpStatus.NOT_FOUND),

    NOT_FOUND_CATEGORY(HttpStatus.NOT_FOUND),
    NOT_FOUND_ITEM_GROUP(HttpStatus.NOT_FOUND),
    NOT_FOUND_ITEM(HttpStatus.NOT_FOUND),
    NOT_FOUND_OPTION_GROUP(HttpStatus.NOT_FOUND),
    NOT_FOUND_OPTION(HttpStatus.NOT_FOUND),

    NOT_FOUND_REVIEW(HttpStatus.NOT_FOUND),
    NOT_FOUND_CART(HttpStatus.NOT_FOUND),
    NOT_FOUND_USER(HttpStatus.NOT_FOUND),
    NOT_FOUND_ORDER(HttpStatus.NOT_FOUND),

    NOT_FOUND_FEED(HttpStatus.NOT_FOUND),
    NOT_FOUND_FEED_COMMENT(HttpStatus.NOT_FOUND),
    NOT_FOUND_ORDER_POLICY(HttpStatus.NOT_FOUND),


    DUPLICATE_NAME_SHOP_CATEGORY(HttpStatus.BAD_REQUEST),
    DUPLICATE_NAME_PRODUCT(HttpStatus.BAD_REQUEST),
    DUPLICATE_CODE_CONTRACT(HttpStatus.BAD_REQUEST),
    CAN_NOT_CANCEL_PICKUP_ORDER(HttpStatus.BAD_REQUEST),
    CAN_NOT_ACCEPT_PICKUP_ORDER(HttpStatus.BAD_REQUEST),
    CAN_NOT_CANCEL_RESERVATION_ORDER(HttpStatus.BAD_REQUEST),
    CAN_NOT_CANCEL_RESERVATION_ORDER_DUE_TO_CANCELLEATION_TIME(HttpStatus.BAD_REQUEST),
    CAN_NOT_ACCEPT_RESERVATION_ORDER(HttpStatus.BAD_REQUEST),
    CAN_NOT_REFUND_RESERVATION_ORDER(HttpStatus.BAD_REQUEST),
    CAN_NOT_DELETE_FAQ_CATEGORY(HttpStatus.BAD_REQUEST),
    CAN_NOT_CHANGE_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    CAN_NOT_REJECT_ORDER(HttpStatus.BAD_REQUEST),
    CAN_NOT_READY_PICKUP_ORDER(HttpStatus.BAD_REQUEST),
    BELOW_MINIMUM_OPTION_SIZE_ORDER(HttpStatus.BAD_REQUEST),
    NOT_SALE_PRODUCT(HttpStatus.BAD_REQUEST),
    NOT_SALE_OPTION(HttpStatus.BAD_REQUEST),
    USER_NOT_AGREED_REQUIRED_CONTRACTS(HttpStatus.BAD_REQUEST),
    ORDER_INACTIVE_SHOP(HttpStatus.BAD_REQUEST),
    BELOW_MINIMUM_ORDER_PRICE_PICKUP_ORDER(HttpStatus.BAD_REQUEST),

    INVALID_PARAMETER_PRODUCT_ID(HttpStatus.BAD_REQUEST),

    FORBIDDEN_OF_ENQUIRY(HttpStatus.FORBIDDEN),

    FORBIDDEN_OF_SHOP(HttpStatus.FORBIDDEN),
    FORBIDDEN_OF_FEED(HttpStatus.FORBIDDEN),
    FORBIDDEN_OF_FEED_COMMENT(HttpStatus.FORBIDDEN),

    INVALID_PARAMETER_SHOP_CATEGORY_NOT_IN_DOMAIN(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_RESERVATION_START_TIME_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_RESERVATION_END_TIME_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_RESERVATION_DAY_OF_WEEK_STATUS_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_RESERVATION_INTERVAL_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_RESERVATION_TIME_SLOT(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_RESERVATION_TIME_OPERATING_DAY(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_RESERVATION_TEAM_PEOPLE_COUNT(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_RESERVATION_TIME_REQUEST_DATE_RANGE(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_RESERVATION_PEOPLE_COUNT(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_RESERVATION_TIME_REQUEST_TIME_RANGE(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_PRODUCT_PRICE(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_CHOICE_COUNT(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_MAXIMUM_PER_CUSTOMER_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_MINIMUM_PER_CUSTOMER_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_REQUEST_PERIOD_TIME_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_TODAY_REQUEST_TIME_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_CANCELLATION_PERIOD_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_NOTIFICATION_HOURS_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_DEPOSIT_POLICY_RESERVATION(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_SIZE_FILE(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_CONTENT_TYPE_FILE(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_ADDRESS_CITY_SHOP(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_BUSINESS_INFO_FILE(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_OF_COMMENT(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_ESTIMATED_TIME_PICKUP_POLICY(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_NEW_PICKUP_ORDER_STATUS_PICKUP_ORDER(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_USER(HttpStatus.BAD_REQUEST),
    INVALID_PARAMETER_CONTENT_FEED(HttpStatus.BAD_REQUEST),

    ILLEGAL_STATE_EMPTY_BUSINESS_INFO_SHOP(HttpStatus.BAD_REQUEST),
    ILLEGAL_STATE_EMPTY_ITEM_ORDER(HttpStatus.BAD_REQUEST),
    ILLEGAL_STATE_PICKUP_READY_TIME_PICKUP_ORDER(HttpStatus.BAD_REQUEST),
    ILLEGAL_STATE_EMPTY_BASIC_INFO_SHOP(HttpStatus.BAD_REQUEST),
    ILLEGAL_STATE_UNUSED_ORDER_POLICY(HttpStatus.BAD_REQUEST),
    ILLEGAL_STATE_CANCEL_ONSITE_ORDER(HttpStatus.BAD_REQUEST),
    ILLEGAL_STATE_REFUND_PICKUP_ORDER(HttpStatus.BAD_REQUEST),
    ILLEGAL_STATE_UNUSED_ORDER(HttpStatus.BAD_REQUEST),
    ILLEGAL_STATE_NOT_SET_PICKUP_POLICY(HttpStatus.BAD_REQUEST),
    ILLEGAL_STATE_NOT_SET_RESERVATION_POLICY(HttpStatus.BAD_REQUEST),
    ILLEGAL_STATE_NOT_SET_ORDER_POLICY(HttpStatus.BAD_REQUEST),
    EXCEED_LIMIT_RETRIES(HttpStatus.REQUEST_TIMEOUT),
    DUPLICATE_ORDER_POLICY(HttpStatus.BAD_REQUEST);

    private final HttpStatus httpStatus;

    @Override
    public String getName() {
        return getName();
    }
}

